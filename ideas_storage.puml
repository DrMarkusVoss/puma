@startuml



rectangle "== Ideas Storage for **pumla**\n <i>-sticky note board- " {

note as n1
   **Idea:** handle tagged values to model
   elements as a table in a note like this:

  |= Tag |= Value |
  | ElementID | 1A75FE |
  | RelatedUseCaseID | 27A |

  Tagged values with macros like
  done in C4model extension
end note

note right of n1 #back:lightGreen : **DONE**

note as n2
**Idea:** show "parent" structure as tree
as a note like this with a macro call
for the whole repo:

Example of Tree
|_ First line
|_ **Bom (Model)**
|_ prop1
|_ prop2
|_ prop3
|_ Last line
end note

note as n3
**Idea**: make a macro to show a list of
elements and their alias as table. That
was the developers and architects can
easily use **pumla** to create themselves
**cheat-sheets**.
end note
note right of n3 #back:lightGreen : **DONE**

note as n4
**Idea:** Use the possibility to read JSON
structures from within .puml files in order
to provide the macros with all information
of the model repository. So the macros
basically read out the JSON puml that holds
the model repository. This JSON puml is
generated by the **pumla** command line
python script that scans and parses the
complete source code repo for pumla files.
end note

note right of n4 #back:lightGreen : **DONE**

note as n5
**Idea:** Use modelling guidelines for
- enabling the possibility of single source usage
  - atomic model element descriptions
  - usage of common variables to enable/disable content
  - keep layouting out of model elements so that it
    can be done later and different for each diagram
- simplifying the scanning through the source code
  repository and parsing the pumla files
end note

note right of n5 #back:lightGreen : **DONE**

note as n6
**Idea:** Provide templates for atomic model element
descriptions

This may require to provide different templates for e.g. for
- SysML
- C4model
- UML

Yet unclear.
end note

note as n7
**Idea:** keep track of a common diagrams repo
and a common dynamic behaviour descriptions.
Also define how the relations are managed...
... yet unclear.
end note

note as n8
**Idea:** Macro to gather all repo-diagrams and put them
into one single MD as overview. Repo-diagrams with 'PUMLADR.
That separation between diagram and model element description
is important as in PlantUML everything is a diagram.
end note

note as n9
**Idea:** Make the python script generate a frame for an arc42
report in which diagrams from the model and diagram repo are included
automatically.
end note

note as n10
**Idea:** Make an "InjectIntoElement(elem, targetParenteElem)" so
that you can later decide when deploying how things are embedded.
So modularity on nesting/embedding elements.
end note

note as n11
**Idea:** Create instantiation mechanism for pumla model repo
elements, so the same element can appear as 2 instances
on the same diagram.
end note
note right of n11 #back:lightGreen : **DONE**

note as n12
**Idea:** Hide/Remove macros for elements
- with defined tag/value pair
- with defined stereotype

PutAllElementsWith property for
- defined tag/value pair
- defined stereotype
end note

note as n13
**Idea:** Blacklist of directories that shall not be scanned by pumla,
e.g. where templates are stored.
end note
}
@enduml