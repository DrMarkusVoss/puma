!$PUMVarShowDescr = %true()
!$PUMVarShowInterfaces = %true()
!$PUMVarShowBody = %true()
!$PUMVarShowBodyInternals = %true()

' --------------------------------------------
' get an element referenced by path and filename name
'
!unquoted procedure _PUMPutElement($folderpath,$filename)
!include $folderpath/$filename
!endprocedure
' ---------------------------------------------


' ############################################

' ---------------------------------------------
' get all elements for given scope out of
' JSON puml file
'
!unquoted procedure PUMLAInjectChildElements($scope)
!foreach $el in $allelems.elements
    !if ($el.parent == $scope)
        !include $el.path/$el.filename
    !endif
!endfor
!endprocedure

' ############################################

' ---------------------------------------------
' get all elements for given scope out of
' JSON puml file
' TODO: a recursion is needed here to go through
' all scopes and elements
' Addendum: no recursion needed, json list will not
' be nested but a linked list by "parent".
'
!unquoted procedure PUMLAPutElement($elem)
!foreach $el in $allelems.elements
    !if ($el.name == $elem)
        _PUMPutElement($el.path,$el.filename)
'    !else
'        !foreach $emp in $scp.elements
'            !if ($emp.name == $elem)
'                _PUMPutElement($emp.path,$emp.filename)
'            !endif
'        !endfor
    !endif
!endfor
!endprocedure

' ############################################

' ---------------------------------------------
' get all elements for given scope out of
' JSON puml file with given level of depth (lod) do
' be visualized

!unquoted procedure PUMLAPutElement($elem, $lod)
!foreach $scp in $allelems.scopes
    !if ($scp.name == $elem)
        _PUMPutElement($scp.path,$scp.filename)
    !else
        !foreach $emp in $scp.elements
            !if ($emp.name == $elem)
                _PUMPutElement($emp.path,$emp.filename)
            !endif
        !endfor
    !endif
!endfor
!endprocedure

' ############################################

' ---------------------------------------------
' all elements with attributes
' diagram creator based on json repo.
' TODO
!unquoted procedure PUMLAPutAllElements()
!foreach $el in $allelems.elements
    _PUMPutElement($el.path,$el.filename)
!endfor
!endprocedure