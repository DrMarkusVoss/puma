@startuml

skinparam componentStyle uml2

skinparam rectangle {
    backgroundColor<<pumla>> LightBlue
}

title pumla Simple Context Diagram


:Developer: as dev

note left of dev
    develop software, document it's architecture in a re-usable
    model repository created with PUMLA, create diagrams  that
    visualize the architecture using PlantUML.
end note

rectangle "pumla.py" <<application>> <<pumla>> as pumla {
}

rectangle "pumla_macros.puml" <<PlantUML Extension>> <<pumla>> as pmac {
}

rectangle "PlantUML" <<application>> as plantuml {
}

note top of pmac
    Extension of PlantUML.
    Macros to make re-use of
    the model elements within
    the JSON model repository.
end note

rectangle "project git-repo" <<source code>> as pgr {
rectangle "PUMLA Model Element description" <<PlantUML *.puml>>  as pumlf {
}
rectangle "Architecture Diagrams \ndescribing \nSource Code Solution" <<PlantUML *.puml>>  as archdiags {
}
rectangle "pumla model repo file" <<JSON PlantUML file>> as pumlamr {
}

collections "Programming Language \n Source Code files" as sc

rectangle "Build Tool Configuration" as btc {
}
}

rectangle "Modelling Guideline" <<markdown document>> <<pumla>> as modguid {
}

rectangle "Model Element templates" <<PlantUML  template>> <<pumla>> as templ {
}

note top of pumla
    Scans for and parses PUMLA
    marked PlantUML files, creates a
    model-repository JSON file accessible
    by PlantUML.
end note


node "Some Computer" as sco {
cloud "Java SE RTE" as Java {
}
 note left of Java : version >= 10.14.6

cloud Python {
 }
 note left of Python: version >= 3.8.2

cloud PlantUML as puml {

 }
 note left of puml: version >= 1.2021.x

}


Java -[hidden]-> Python
Python -[hidden]-> puml
pumlamr -[hidden]-> sco

pumla --> sco: runs on

dev-->pumla: use
dev-->pgr: work on
dev-->modguid: follow
dev-->templ : use
dev --> archdiags : model architecture\nusing model repo
templ-->pmac :use
modguid--> pmac: proposes usage of
modguid--> templ: proposes usage of
archdiags-->pmac : include
archdiags-->pumlamr : include
pumla ..> btc: integrate into
pumla ..> pumlamr: generate/update
pumla ..> pumlf: find and enlist
pumlf ..> pumlamr: include
pumlf ..> pmac : include
pumlf ..> templ : based on
dev --> pmac : use
dev --> pumlf : create and maintain
pgr --> sco : gets build and \ntested locally
pumlf --> plantuml: use to create diagrams
archdiags -->plantuml: use to create diagrams
pumlf --> sc : describes architecture \n element of
@enduml